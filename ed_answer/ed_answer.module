<?php

require_once('ed_answer_functions.inc');

function ed_answer_node_info() {
  $items['ed_answer'] = array(
    'name' => t('Answer'),
    'type' => 'ed_answer',
    'base' => 'node_content',
    'description' => t('description'),
    'has_title' => 0,
    'body_label' => t('body_label'),
  );
  return $items;
}

function ed_answer_form($node, $form_state) {
  return node_content_form($node, $form_state);
}

function ed_answer_node_view($node, $view_mode, $langcode){
  if($node->type == 'ed_answer'){
      drupal_set_title($node->field_ref_to_task['und'][0]['entity']->title.t(' - Answer'));
  }
}


function ed_answer_form_alter(&$form, &$form_state, $form_id){

  if( $form_id == 'ed_answer_node_form' ) {
    if($form['#node']->field_ref_to_task){
      $reftotask = $form['#node']->field_ref_to_task['und'][0]['target_id'];
    }else{
      $reftotask = $_GET['field_ref_to_task'];
    }
    $node = node_load($reftotask);
    $form['og_group_ref']['und'][0]['default']['#default_value'] = $node->og_group_ref['und'][0]['target_id'];
    $form['ed_field_content']['#weight'] = 1;
    $form['field_ref_to_task']['und']['#title'] = t('Answer To Task');
    $form['tabs'] = array(
      '#type' => 'vertical_tabs',
      '#weight' => 0,
    );
    $form['ed_answer_task'] = array(
      '#tree' => TRUE,
      '#type' => 'fieldset',
      '#title' => t('Task'),
      '#collapsible' => FALSE,
      '#collapsed' => FALSE,
      '#group' => 'tabs',
    );
    $form['ed_answer_task']['task_title'] = array(
      '#type' => 'markup',
      '#markup' => '<h2>'. l($node->title, 'node/'.$reftotask).'</h2>',
      '#weight' => -1,
    );
    $task_content = field_get_items('node', $node, 'ed_field_content');
    $task_content_view = field_view_value('node', $node, 'ed_field_content', $task_content[0]);
    $form['ed_answer_task']['task_content'] = $task_content_view;
    $task_cat = field_get_items('node', $node, 'ed_field_category');

    foreach($task_cat as $term){
      $cat_terms[] = field_view_value('node', $node, 'ed_field_category', $term);
    }
    foreach($cat_terms as $term){
      $test[] = taxonomy_term_load($term['#options']['entity']->tid);
    }
    $term_nr = 0;
    $form['#attached']['js'] = array(drupal_get_path('module', 'ed_answer') . '/ed_answer_js.js',);
    $form['ed_answer_task_cat'] = array(
      '#tree' => TRUE,
      '#type' => 'fieldset',
      '#title' => t('Category'),
      '#group' => 'tabs',
    );

    $form['ed_answer_task_cat']['category'] = array(
      '#tree' => TRUE,
      '#type' => 'container',
      '#prefix' => '<ul class="category-container">',
      '#suffix' => '</ul>',
    );
    $help = 0;
    foreach($cat_terms as $tid){
      $form['ed_answer_task_cat']['category'][$help] = array(
        '#type' => 'markup',
        '#markup' => t(l(t($tid['#options']['entity']->name), $tid['#href']).'<br />'),
      );
      if(ed_answer_check_tid_parents($tid['#options']['entity']->tid)==0){
      /*$form['test']['test2'][$help]['#prefix'] = '<li>';
        $form['test']['test2'][$help]['#suffix'] = '</li>';*/
      }else{
        $depth = 0;
        $flag = true;
        $parent = ed_answer_check_tid_parents($tid['#options']['entity']->tid);
        $form['ed_answer_task_cat']['category'][$help]['#prefix']='';
        $form['ed_answer_task_cat']['category'][$help]['#suffix']='';
        while($flag){
          if($parent==0){
            for($i = 0;$i<$depth;$i++){
              $form['ed_answer_task_cat']['category'][$help]['#prefix'].='<ul>';
            }
            $form['ed_answer_task_cat']['category'][$help]['#suffix'].='</ul>';
            $flag = false;
          }else{
            $depth++;
            $parent = ed_answer_check_tid_parents($parent);
          }
        }
      }
      $help++;
    }
    $form['ed_answer_task_comp'] = array(
      '#tree' => TRUE,
      '#type' => 'fieldset',
      '#title' => t('Competence'),
      '#group' => 'tabs',
    );
    $form['ed_answer_task_comp']['competence'] = array(
      '#tree' => TRUE,
      '#type' => 'container',
      '#prefix' => '<ul class="competence-container">',
      '#suffix' => '</ul>',
    );

    $task_comp = field_get_items('node', $node, 'ed_field_competence');

    foreach($task_comp as $competenceTerm){
      $comp_terms[] = field_view_value('node', $node, 'ed_field_competence', $competenceTerm);
    }
    foreach($comp_terms as $term){
      $test[] = taxonomy_term_load($term['#options']['entity']->tid);
    }

    $help2 = 0;
    foreach($comp_terms as $tid){
      $form['ed_answer_task_comp']['competence'][$help2] = array(
        '#type' => 'markup',
        '#markup' => t(l(t($tid['#options']['entity']->name), $tid['#href']).'<br />'),
      );
      if(ed_answer_check_tid_parents($tid['#options']['entity']->tid)==0){
        /*$form['test']['test2'][$help]['#prefix'] = '<li>';
          $form['test']['test2'][$help]['#suffix'] = '</li>';*/
      }else{
        $depth = 0;
        $flag = true;
        $parent = ed_answer_check_tid_parents($tid['#options']['entity']->tid);
        $form['ed_answer_task_comp']['competence'][$help2]['#prefix']='';
        $form['ed_answer_task_comp']['competence'][$help2]['#suffix']='';
        while($flag){
          if($parent==0){
            for($i = 0;$i<$depth;$i++){
              $form['ed_answer_task_comp']['competence'][$help2]['#prefix'].='<ul>';
            }
            $form['ed_answer_task_comp']['competence'][$help2]['#suffix'].='</ul>';
            $flag = false;
          }else{
            $depth++;
            $parent = ed_answer_check_tid_parents($parent);
          }
        }
      }
      $help2++;
    }

  }
}

  function ed_answer_check_tid_parents($tid){
  $query = db_select('taxonomy_term_hierarchy', 't')
    ->condition('t.tid', $tid);
  $query->fields('t', array('parent'));
  $result = $query->execute()->fetchCol();
  return $result[0];
}



function ed_answer_check_tid_parent($tid){
  $query = db_select('taxonomy_term_hierarchy', 't')
    ->condition('t.tid', $tid);
  $query->fields('t', array('parent'));
  $result = $query->execute()->fetchCol();
  //dsm($result[0]);
  if( $result[0]==0){
    return false;
  }else{
    $tere = ed_answer_check_tid_parent($result[0]);
    if($tere == 0){
      return true;
    }else{
      ed_answer_check_tid_parent($result[0]);

    }
  }
}


