<?php

/**
 * @file
 * ed_file.install
 */

/**
 * Implements hook_install().
 */
function ed_file_install() {
  ed_file_create_field_file_upload();
  ed_file_create_field_ed_file_folder_ref();
  ed_file_create_ed_file_node_type();
  ed_file_node_add_field_file_upload();
  ed_file_node_add_field_category();
  ed_file_add_field_ed_file_folder_ref('ed_file');
  ed_file_create_ed_file_folder_node_type();
  ed_file_add_field_ed_file_folder_ref('ed_file_folder');
  ed_file_set_permissions();
}

/**
 * Implements hook_uninstall().
 */
function ed_file_uninstall() {
  ed_file_delete_ed_files_and_folders();
  ed_file_delete_ed_file_node_type();
  ed_file_delete_ed_file_folder_node_type();
  field_delete_field('ed_file_folder_ref');
  field_delete_field('ed_file_field_file_upload');
}

/**
 * Creates ed_file node type.
 */
function ed_file_create_ed_file_node_type() {
  if (!in_array('ed_file', node_type_get_names())) {
    $type = array(
      'type' => 'ed_file',
      'name' => t('File'),
      'base' => 'node_content',
      'custom' => FALSE,
      'modified' => FALSE,
      'locked' => TRUE,
      'has_title' => TRUE,
      'title_label' => t('Title'),
      'module' => 'ed_file',
    );
    $type = node_type_set_defaults($type);
    node_type_save($type);
    variable_set('comment_ed_file', COMMENT_NODE_CLOSED);
  }
}

/**
 * Creates ed_file_folder node type.
 */
function ed_file_create_ed_file_folder_node_type() {
  if (!in_array('ed_file_folder', node_type_get_names())) {
    $type = array(
      'type' => 'ed_file_folder',
      'name' => t('File folder'),
      'base' => 'node_content',
      'custom' => FALSE,
      'modified' => FALSE,
      'locked' => TRUE,
      'has_title' => TRUE,
      'title_label' => t('Title'),
      'module' => 'ed_file',
    );
    $type = node_type_set_defaults($type);
    node_type_save($type);
    variable_set('comment_ed_file_folder', COMMENT_NODE_CLOSED);
  }
}

/**
 * Sets permissions for ed_file and ed_file_folder.
 */
function ed_file_set_permissions() {
  $permissions = array(
    'create ed_file content' => TRUE,  
    'edit own ed_file content' => TRUE,  
    'delete own ed_file content' => TRUE,  
    'create ed_file_folder content' => TRUE,  
    'edit own ed_file_folder content' => TRUE,  
    'delete own ed_file_folder content' => TRUE,  
  );
  user_role_change_permissions(DRUPAL_AUTHENTICATED_RID, $permissions);
}

/**
 * Creates file upload field if not exists.
 */
function ed_file_create_field_file_upload() {
  $field_name = 'ed_file_field_file_upload';
  if (!field_info_field($field_name)) {
    $field = array(
      'field_name' => $field_name,
      'type' => 'file',
      'entity_types' => array('node'),
      'cardinality' => 1,
      'locked' => FALSE,
      'settings' => array(
        'uri_scheme' => 'public',
      ),
    );
    $field = field_create_field($field);
  }
}

/**
 * Creates ed_file_folder_ref field if not exists.
 */
function ed_file_create_field_ed_file_folder_ref() {
  $field_name = 'ed_file_folder_ref';
  if (!field_info_field($field_name)) {
    $field = array(
      'field_name' => $field_name,
      'type' => 'entityreference',
      'entity_types' => array('node'),
      'cardinality' => 1,
      'locked' => FALSE,
      'settings' => array(
        'handler' => 'views',
        'handler_settings' => array(
          'view' => array(
            'view_name' => 'user_ed_file_folders',  
            'display_name' => 'entityreference',
            'args' => '', 
          ),  
        ), 
      ),
    );
    $field = field_create_field($field);
  }
}

/**
 * Adds ed_file_folder_ref field to given node type.
 * 
 * @param string $node_type
 *   Node type
 */
function ed_file_add_field_ed_file_folder_ref($node_type) {
  $field_name = 'ed_file_folder_ref';
  $field = field_info_field($field_name);
  if (!empty($field) && !field_info_instance('node', $field_name, $node_type)) {
    $instance = array(
      'field_name' => $field_name,
      'entity_type' => 'node',
      'bundle' => $node_type,
      'label' => t('Folder'),
      'description' => '',
      'required' => FALSE,
      'widget' => array(
        'type' => 'options_select',
      ),
    );
    $instance['settings']['behaviors']['prepopulate'] = array(
      'status' => TRUE,
      'action' => 'none',
      'fallback' => 'none',
      'skip_perm' => FALSE,
    );
    field_create_instance($instance);
  }
}

/**
 * Adds file upload field to ed_file node type.
 */
function ed_file_node_add_field_file_upload() {
  $field_name = 'ed_file_field_file_upload';
  $field = field_info_field($field_name);
  if (!empty($field) && !field_info_instance('node', $field_name, 'ed_file')) {
    $instance = array(
      'field_name' => $field_name,
      'entity_type' => 'node',
      'bundle' => 'ed_file',
      'label' => t('Upload file'),
      'description' => '',
      'settings' => array(
        'file_directory' => 'ed_file_uploads',
      ),
      'required' => TRUE,
    );
    field_create_instance($instance);
  }
}

/**
 * Category field for ed_file node.
 */
function ed_file_node_add_field_category() {
  $field_name = 'ed_field_category';
  $field = field_info_field($field_name);
  if (!empty($field_name) && !field_info_instance('node', $field_name, 'ed_file')) {
    $instance = array(
      'field_name' => $field_name,
      'entity_type' => 'node',
      'bundle' => 'ed_file',
      'label' => t('Categories'),
      'description' => '',
      'widget' => array(
        'type' => 'term_reference_tree',
        'settings' => array(
          'start_minimized' => TRUE,
        ),
      ),
      'display' => array(
        'default' => array(
          'type' => 'term_reference_tree',
        ),
      ),
      'required' => FALSE,
    );
    field_create_instance($instance);
  }
}
  
/**
 * Deletes all ed_file and ed_file_folder nodes.
 */
function ed_file_delete_ed_files_and_folders() {
  $nids = array();
  $query = db_select('node', 'n')
    ->fields('n', array('nid'))
    ->condition('n.type', array('ed_file', 'ed_file_folder'), 'IN');
  $nids = $query->execute()->fetchCol();
  if (!empty($nids)) {
    node_delete_multiple($nids);
  }
}

/**
 * Deletes ed_file node type.
 */
function ed_file_delete_ed_file_node_type() {
  if (in_array('ed_file', node_type_get_names())) {
    node_type_delete('ed_file');
    node_types_rebuild();  
    variable_del('comment_ed_file');
  }  
}

/**
 * Deletes ed_file_folder node type.
 */
function ed_file_delete_ed_file_folder_node_type() {
  if (in_array('ed_file_folder', node_type_get_names())) {
    node_type_delete('ed_file_folder');
    node_types_rebuild();  
    variable_del('comment_ed_file_folder');
  }  
}

