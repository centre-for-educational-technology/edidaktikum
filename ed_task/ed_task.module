<?php
// Table Paging displays quite well with Firefox. Not so well with Chrome.
require_once('ed_task_functions.inc');

/**
 * Implements hook_info().
 */
function ed_task_node_info() {
  $items['ed_task'] = array(
    'name' => t('Task/Assignment'),
    'type' => 'ed_task',
    'base' => 'node_content',
    'description' => t('Description2'),
    'has_title' => '1',
    'title_label' => t('Title'),
    'body_label' => t('body_label'),
  );
  return $items;
}

/**
 * Implements hook_form().
 */
function ed_task_form($node, $form_state) {
  return node_content_form($node, $form_state);
}

/**
 * Implements hook_menu().
 */
function ed_task_menu(){
  $items['tasks'] = array(
    'title' => t('Tasks'),
    'page callback' => 'ed_task_listing_page',
    'access callback' => TRUE,
    'weight' => 15,
    'menu_name' => 'ed-dashboard-menu',     // For easy testing purposes.
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function ed_task_listing_page() {
  $content = array();
  $table_suffix = 1;

// @todo only display the link if user is authorized to add new tasks? Might not be necessary. Only logged in users can see this page in the future.
  $content['add-task'] = array(
    '#type' => 'link',
    '#title' => t('Add new task'),
    '#href' => 'node/add/ed-task',
  );

  $table_type = 'pager_table';

  // Tasks that are made by the logged in user.
  $nodes = _ed_get_cur_user_tasks();

  if ( !empty($nodes) ) {
    foreach($nodes as $node) {

      if(isset($node->ed_task_to_user['und']['0']['uid']) && !isset($node->ed_task_to_user['und']['1']['uid'])) {
        $user = user_load($node->ed_task_to_user['und']['0']['uid']);
        $username = ", ".$user->name;
      }
      elseif(isset($node->ed_task_to_user['und']['1']['uid'])){
        $user = user_load($node->ed_task_to_user['und']['0']['uid']);
        $username = ", ".$user->name."...";
      }
      else{
        $username = '';
      }

      $datehelp = strtotime($node->ed_task_due_date['und']['0']['value']);
      if( isset($node->og_group_ref['und']['0']['target_id']) ){
        $shared_to = $node->og_group_ref['und']['0']['target_id'];
      } else {
        $shared_to = '';
      }
      $group_title = _ed_get_group_name_from_id($shared_to);
      $rows[] = array(
        'data' => array(
          'title' => l($node->title, 'node/' . $node->nid),
          'shared_to' => t(l($group_title, 'node/' . $shared_to).$username),
          'due_date' => format_date($datehelp, 'custom','d/m/Y'),
        ),
      );
    }

    $content[$table_type.'-'.$table_suffix] = array(
      '#theme' => 'table',
      '#rows' => $rows,
      '#header' => array(t('Tasks by me'), t('Shared To'), t('Due Date')),
    );
    $content['pager'] = array('#theme' => 'pager');
  }else {
    $content['no-task-made'] = array(
      '#type' => 'markup',
      '#markup' => '<h2>' . t('You haven\'t made any tasks') . '</h2>',
    );
  }

  // Tasks from groups that the user is associated with.
  $user = $GLOBALS['user'];
  if(isset($user->uid)){
    $groups = og_get_groups_by_user();
    foreach($groups['node'] as $group) {
      $table_suffix++;
      $group_title = _ed_get_group_name_from_id($group);
      $nids = _ed_get_tasks_specific_group($group);
      $nodes = node_load_multiple($nids);
      $rows2 = array();
      foreach($nodes as $node) {
        $datehelp = strtotime($node->ed_task_due_date['und']['0']['value']);
        $rows2[] = array(
          'data' => array(
            'task_name' => l($node->title, 'node/' . $node->nid),
            'posted_by' => $node->name,
            'due_date' => format_date($datehelp, 'custom','d/m/Y'),   // Check if displays right date
          ),
        );
      }
      $content[$table_type.'-'.$table_suffix] = array(
        '#theme' => 'table',
        '#rows' => $rows2,
        '#header' => array($group_title, t('Assigned By'), t('Due Date')),
      );
      $content['pager-'.$table_suffix] = array(
        '#theme' => 'pager',
        '#element' => $table_suffix-1,
      );
    }
  }
  return $content;
}


  function ed_task_node_view($node, $view_mode, $langcode) {
    switch($node->type) {
      case 'ed_task':
        $options = array(
          'attributes' => array(),
          'query' => array(
            'field_ref_to_task' => $node->nid,
          ),
        );

        $node->content['ed_task_asjandus'] = array(
          '#type' => 'item',
          '#title' => t(''),
          '#markup' => l(t('Answer'), 'node/add/ed-answer', $options),
        );
        break;
    }
  }

  function ed_task_field_extra_fields() {
    $extra['node']['ed_task']['display'] = array(
      'ed_task_asjandus' => array(
        'label' => t('extra fields label'),
        'description' => t('extra fields descrption'),
        'weight' => 10,
      ),
    );
    return $extra;
  }
/**
 * Helper and database query functions
 */
function _ed_get_group_name_from_id($id) {
  $query = db_select('node', 'n')
    ->fields('n', array('nid', 'title'))
    ->condition('nid', $id);
  $result = $query->execute();
  $string = '';
  foreach($result as $record){
    $string = (string) $record->title;
  }
  return $string;
}


function _ed_get_cur_user_tasks(){
  $acc = $GLOBALS['user'];
  $query = db_select('node', 'n')
    ->fields('n', array('nid'))
    ->condition('n.type', 'ed_task')
    ->condition('n.uid', $acc->uid);

  $query = $query->extend('TableSort')->extend('PagerDefault')->limit(2); //Small number for testing purposes

  $result = $query->execute()->fetchCol();
  $nodes = node_load_multiple($result);
  return $nodes;
}

function _ed_get_tasks_specific_group($gid) {
  $query=db_select('node', 'n');
  $query->join('og_membership', 'og', 'n.nid = og.etid');
  $query->fields('n', array('nid'))
    ->condition('n.type', 'ed_task')
    ->condition('og.gid', $gid);

  $query = $query->extend('TableSort')->extend('PagerDefault')->limit(2); //Small number for testing purposes

  $result = $query->execute()->fetchCol();

  return $result;
}

function _ed_get_group_tasks(){
  $groups = og_get_groups_by_user();
  $helper = array();
  foreach($groups['node'] as $gid) {
    array_push($helper, $gid);
  }
  $query = db_select('node','n');
  $query->join('og_membership', 'og','n.nid = og.etid');
  $query->fields('n', array('nid'))
    ->condition('n.type', 'ed_task')
    ->condition('og.gid', $helper, "IN");
  $result = $query->execute()->fetchCol();
  return $result;
}
/*
function ed_task_form_alter($form, &$form_state, $form_id){

  $form['ed_field_category']['#attributes'] = array('class' => 'your-class-name');

  dsm($form);
  dsm($form_state);
  dsm($form_id);
  return $form;
}*/

/**
 * Implements hook_ctools_plugin_api().
 */
function ed_task_ctools_plugin_api() {
  list($module, $api) = func_get_args();
  if($module == 'page_manager' && $api == 'pages_default') {
    return array('version' => 1);
  }
}
