<?php

/**
 * Implements hook_install().
 */

require_once('ed_task_functions.inc');

function ed_task_install() {
  //Create content type.
  node_types_rebuild();
  $types = node_type_get_types();

  //Create required fields.
  foreach (_ed_task_installed_fields() as $field) {
    field_create_field($field);
  }

  // Create instances for fields.
  foreach (_ed_task_installed_instances() as $instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = 'ed_task';
    field_create_instance($instance);
  }

  ed_task_add_og_audience();

  //Disable comments
  variable_set('comment_ed_task', COMMENT_NODE_OPEN);
}

function ed_task_add_og_audience() {
  if(function_exists('og_create_field') && defined('OG_AUDIENCE_FIELD')) {
    $og_field = og_fields_info(OG_AUDIENCE_FIELD);
    $og_field['instance']['label'] = t('Group');
    $og_field['instance']['required'] = FALSE;
    $og_field['instance']['settings']['behaviors']['prepopulate'] = array(
      'status' => TRUE,
      'action' => 'none',
      'fallback' => 'none',
      'skip_perm' => FALSE,
    );
    og_create_field(OG_AUDIENCE_FIELD, 'node', 'ed_task', $og_field);
  }
}

/**
 * Implements hook_uninstall().
 */
function ed_task_uninstall() {
  // gather all content
  $result = db_select('node', 'n')
    ->fields('n', array('nid'))
    ->condition("n.type", 'ed_task')
    ->execute();

  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  // delete all nodes
  node_delete_multiple($nids);

  foreach(array_keys(_ed_task_installed_fields()) as $field) {
    field_delete_field($field);
  }

  //delete any remaining field instances
  $instances = field_info_instances('node', 'ed_task');
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }

  // Delete Task content type
  node_type_delete('ed_task');

  //purge all field information
  field_purge_batch(1000);

  //delete set variables
  variable_del('comment_ed_task');
}

/**
 * Enable comments for ed_task.
 * Also update any existing ones to comply.
 */
function ed_task_update_7100(&$sandbox) {
  $node_type = 'ed_task';
  // Allowing comments on any new ed_task nodes by default
  variable_set('comment_ed_task', COMMENT_NODE_OPEN);

  // Initialize batch
  if (!isset($sandbox['total'])) {
    $total = db_select('node', 'n')
      ->fields('n', array('nid'))
      ->condition('type', $node_type)
      ->countQuery()
      ->execute()
      ->fetchField();

    $sandbox['total'] = $total;
    $sandbox['progress'] = 0;

    if (empty($sandbox['total'])) {
      $sandbox['#finished'] = 1;
      return t('No %type nodes exist in database.', array('%type' => $node_type));
    }
  }

  $nids = db_select('node')
    ->fields('node', array('nid'))
    ->condition('type', $node_type)
    ->range(0, 10)
    ->execute()
    ->fetchCol();

  if (!empty($nids)) {
    $nodes = node_load_multiple($nids, NULL, TRUE);

    foreach ($nodes as $node) {
      $node->comment = COMMENT_NODE_OPEN;
      node_save($node);
    }
  }

  // Increment and check progress
  $sandbox['progress'] += count($nids);
  if (empty($nids) || $sandbox['progress'] >= $sandbox['total']) {
    $sandbox['#finished'] = 1;
    return t('Updated @count nodes of type %type.', array('@count' => $sandbox['progress'], '%type' => $node_type));
  } else {
    $sandbox['#finished'] = $sandbox['progress'] / $sandbox['total'];
  }
}

/**
 * Add to_group_member field instance to ed_task.
 * Also removes to_user instance and field.
 */
function ed_task_update_7101(&$sandbox) {
  $instances = _ed_task_installed_instances();
  $instance = $instances[ED_FIELD_TO_GROUP_MEMBER];
  $instance['entity_type'] = 'node';
  $instance['bundle'] = 'ed_task';
  field_create_instance($instance);

  $field_name = 'field_to_user';
  if ($instance = field_info_instance('node', $field_name, 'ed_task')) {
    field_delete_instance($instance);
  }
  if ($field = field_info_field($field_name)) {
    field_delete_field($field_name);
  }
}

/**
 * Make competence instace start collapsed.
 */
function ed_task_update_7102(&$sandbox) {
  $field_name = 'ed_field_competence';
  if ($instance = field_info_instance('node', $field_name, 'ed_task')) {
    $instance['widget']['settings']['start_minimized'] = TRUE;
    field_update_instance($instance);
  }
}

