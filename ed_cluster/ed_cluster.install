<?php

/**
 * @file
 *
 */

/**
 * Implements hook_install().
 */
function ed_cluster_install() {
  ed_cluster_create_node();
  ed_cluster_node_add_og_group_field();
  ed_cluster_node_add_field_excerpt();
  ed_cluster_node_add_field_content();
  ed_cluster_node_add_field_category();
  ed_cluster_node_add_field_group_state();
  ed_cluster_node_add_og_group_access_field();
  ed_cluster_node_add_field_featured_image();
  ed_cluster_add_field_private_comment();
  ed_cluster_create_field_to_group_member();

	ed_cluster_create_field_group_type();
	ed_cluster_node_add_field_group_type();
	ed_cluster_node_add_field_curriculum();
	ed_cluster_node_add_field_university();
	ed_cluster_node_add_field_course_code();
	ed_cluster_node_add_field_course_aim();
	ed_cluster_node_add_field_learning_outcomes();
	ed_cluster_node_add_field_assessment_method();
	ed_cluster_node_add_field_study_year();

	ed_cluster_node_add_field_g_drive_file();
}

function ed_cluster_node_add_field_featured_image() {
  $field_name = 'ed_field_featured_image';
  $field = field_info_field($field_name);
  if (!empty($field) && !field_info_instance('node', $field_name, 'ed_cluster')) {
    $instance = array(
      'field_name' => $field_name,
      'entity_type' => 'node',
      'bundle' => 'ed_cluster',
      'label' => t('Featured image'),
      'description' => '',
      'settings' => array(
        'file_directory' => 'ed_cluster_featured_images',
      ),
      'widget' => array(
        'type' => 'image_image',
      ),
      'required' => FALSE,
    );
    field_create_instance($instance);
  }
}

/**
 * Implements hook_uninstall().
 */
function ed_cluster_uninstall() {
  ed_cluster_delete_ed_cluster_nodes();
  ed_cluster_delete_node();

	field_delete_field('ed_field_group_type');
	field_delete_instance('ed_field_group_type');

	field_delete_field('ed_field_curriculum');
	field_delete_instance('ed_field_curriculum');

	field_delete_field('ed_field_university');
	field_delete_instance('ed_field_university');

	field_delete_field('ed_field_course_code');
	field_delete_instance('ed_field_course_code');

	field_delete_field('ed_field_course_aim');
	field_delete_instance('ed_field_course_aim');

	field_delete_field('ed_field_learning_outcomes');
	field_delete_instance('ed_field_learning_outcomes');

	field_delete_field('ed_field_assessment_method');
	field_delete_instance('ed_field_assessment_method');

	field_delete_field('ed_field_study_year');
	field_delete_instance('ed_field_study_year');


	field_delete_instance('ed_g_drive_file');

}

/**
 * Creates ed_cluster node type.
 */
function ed_cluster_create_node() {
  if (!in_array('ed_cluster', node_type_get_names())) {
    $type = array(
      'type' => 'ed_cluster',
      'name' => t('Group'),
      'base' => 'node_content',
      'custom' => TRUE,
      'modified' => FALSE,
      'locked' => TRUE,
      'has_title' => TRUE,
      'title_label' => t('Title'),
      'module' => 'ed_cluster',
    );
    $type = node_type_set_defaults($type);
    node_type_save($type);
  }
}

/**
 * Adds og group field to ed_cluster node type.
 */
function ed_cluster_node_add_og_group_field() {
  if (function_exists('og_create_field') && defined('OG_GROUP_FIELD')) {
    $og_field = og_fields_info(OG_GROUP_FIELD);
    $og_field['instance']['display']['teaser']['label'] = 'hidden';
    $og_field['instance']['display']['teaser']['type'] = 'og_group_subscribe';
    $og_field['instance']['display']['teaser']['weight'] = 0;
    og_create_field(OG_GROUP_FIELD, 'node', 'ed_cluster', $og_field);
  }
}

/**
 * Adds excerpt field to ed_cluster node type.
 */
function ed_cluster_node_add_field_excerpt() {
  $field_name = 'ed_field_excerpt';
  $field = field_info_field($field_name);
  if (!empty($field) && !field_info_instance('node', $field_name, 'ed_cluster')) {
    $instance = array(
      'field_name' => $field_name,
      'entity_type' => 'node',
      'bundle' => 'ed_cluster',
      'label' => t('Excerpt'),
      'description' => '',
      'required' => TRUE,
      'display' => array(
        'teaser' => array(
          'label' => 'hidden',
          'type' => 'text_trimmed',
        ),
      ),
    );
    field_create_instance($instance);
  }
}

/**
 * Adds content (description) field to ed_cluster node type.
 */
function ed_cluster_node_add_field_content() {
  $field_name = 'ed_field_content';
  $field = field_info_field($field_name);
  if (!empty($field) && !field_info_instance('node', $field_name, 'ed_cluster')) {
    $instance = array(
      'field_name' => $field_name,
      'entity_type' => 'node',
      'bundle' => 'ed_cluster',
      'label' => t('Content'),
      'description' => '',
      'settings' => array(
        'text_processing' => TRUE,
      ),
      'widget' => array(
        'settings' => array(
          'rows' => 20,
        ),
      ),
      'required' => FALSE,
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_default',
        ),
        'featured' => array(
          'label' => 'hidden',
          'type' => 'text_default',
        ),
      ),
    );
    field_create_instance($instance);
  }
}

/**
 * Adds category field to ed_cluster node type.
 */
function ed_cluster_node_add_field_category() {
  $field_name = 'ed_field_category';
  $field = field_info_field($field_name);
  if (!empty($field_name) && !field_info_instance('node', $field_name, 'ed_cluster')) {
    $instance = array(
      'field_name' => $field_name,
      'entity_type' => 'node',
      'bundle' => 'ed_cluster',
      'label' => t('Categories'),
      'description' => '',
      'widget' => array(
        'type' => 'term_reference_tree',
        'settings' => array(
          'start_minimized' => TRUE,
        ),
      ),
      'required' => FALSE,
    );
    field_create_instance($instance);
  }
}

/**
 * Adds group state field to ed_cluster node type.
 */
function ed_cluster_node_add_field_group_state() {
  $field_name = 'ed_field_group_state';
  $field = field_info_field($field_name);
  if (!empty($field) && !field_info_instance('node', $field, 'ed_cluster')) {
    $instance = array(
        'field_name' => $field_name,
        'entity_type' => 'node',
        'bundle' => 'ed_cluster',
        'label' => t('Group state'),
        'description' => '',
        'widget' => array(
            'type' => 'radio',
            'settings' => array(
                'display_label' => TRUE,
            ),
        ),
        'required' => TRUE,

        'default_value' => array(
            '0' => array(
                'value' => 1,
            ),
        ),

    );
    field_create_instance($instance);
  }

}

/**
 * Adds og group access field to ed_cluster node type.
 */
function ed_cluster_node_add_og_group_access_field() {
  if (function_exists('og_create_field') && defined('OG_ACCESS_FIELD')) {
    og_create_field(OG_ACCESS_FIELD, 'node', 'ed_cluster');
  }
}

/**
 * Creates field ed_field_private_comment.
 */
function ed_cluster_add_field_private_comment() {
  $field_name = 'ed_field_private_comment';
  if (!field_info_field($field_name)) {
    $field = array(
      'field_name' => $field_name,
      'type' => 'list_boolean',
      'settings' => array(
        'allowed_values' => array(0, 1),
      ),
      'entity_types' => array('comment'),
    );
    field_create_field($field);
  }
}

/**
 * Creates field ed_field_to_group_member.
 */
function ed_cluster_create_field_to_group_member() {
  $field_name = ED_FIELD_TO_GROUP_MEMBER;
  if (!field_info_field($field_name)) {
    $field = array(
      'field_name' => $field_name,
      'type' => 'entityreference',
      'module' => 'entityreference',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'entity_types' => array('node'),
      'settings' => array(
        'target_type' => 'user',
        'handler' => 'groupsusers',
      ),
    );
    field_create_field($field);
  }
}

/**
 * Creates ed_group_type field if not exists.
 */
function ed_cluster_create_field_group_type() {
	$field_name = 'ed_field_group_type';
	if (!field_info_field($field_name)) {
		$field = array(
				'field_name' => $field_name,
				'type' => 'number_integer',
				'entity_types' => array('node'),
				'cardinality' => 1,
				'locked' => false,
		);
		field_create_field($field);
	}
}

/**
 * Add ed_group_type field
 */
function ed_cluster_node_add_field_group_type()
{

	$field_name = 'ed_field_group_type';
	$field = field_info_field($field_name);
	if (!empty($field) && !field_info_instance('node', $field, 'ed_cluster')) {
		$instance = array(
				'field_name' => $field_name,
				'entity_type' => 'node',
				'bundle' => 'ed_cluster',
				'required' => true,
				'label' => t('Kursuse tüüp'),
				'description' => t('1 - Tasemeõppekursus; 2 - Täiendkoolitus; 3 - Projektipõhineõpe/Muu'),
				'widget' => array(
						'type' => 'radio',
						'settings' => array(
								'display_label' => TRUE,
						),
				),

//				'settings' => array(
//						'behaviors' => array(
//								'prepopulate' => array(
//										'status' => 1,
//										'action' => 'disable',
//										'action_on_edit' => 1,
//										'fallback' => 'none',
//										'skip_perm' => '0',
//										'og_context' => 0,
//								),
//						),
//						'user_register_form' => FALSE,
//				),
				'display' => array(
						'default' => array('type' => 'hidden'),
						'teaser' => array('type' => 'hidden')
				)
		);
		field_create_instance($instance);
	}

}


/**
 * Creates and adds curriculum field
 */
function ed_cluster_node_add_field_curriculum() {

	if(!field_info_field('ed_field_curriculum')){
		$field = array(
				'field_name' => 'ed_field_curriculum',
				'label' => t('Õppekava'),
				'type' => 'list_text',
				'cardinality' => FIELD_CARDINALITY_UNLIMITED,
				'foreign keys' => array(),
				'module' => 'list',
				'settings' => array(
						'allowed_values' => [],
            'allowed_values_function' => '_ed_cluster_curriculum_options_list',
				),
		);
		field_create_field($field);
	}

	if(!field_info_instance('node', 'ed_field_curriculum', 'ed_cluster')){
		$instance = array(
				'field_name' => 'ed_field_curriculum',
				'label' => t('Õppekava'),
				'description' => '',
				'required' => false,
				'entity_type' => 'node',
				'bundle' => 'ed_cluster',
				'display' => array(
						'default' => array(
								'label' => 'above',
								'type' => 'list_default',
								'module' => 'list',
						),
				),
				'widget' => array(
						'type' => 'options_select',
				),
		);
		field_create_instance($instance);
	}
}

/**
 * Creates and adds university field
 */
function ed_cluster_node_add_field_university() {

	if(!field_info_field('ed_field_university')){
		$field = array(
				'field_name' => 'ed_field_university',
				'label' => t('Ülikool'),
				'type' => 'list_text',
				'cardinality' => FIELD_CARDINALITY_UNLIMITED,
				'foreign keys' => array(),
				'module' => 'list',
				'settings' => array(
						'allowed_values' => [],
            'allowed_values_function' => '_ed_cluster_universities_options_list',
				),
		);
		field_create_field($field);
	}

	if(!field_info_instance('node', 'ed_field_university', 'ed_cluster')){
		$instance = array(
				'field_name' => 'ed_field_university',
				'label' => t('Ülikool'),
				'description' => '',
				'required' => false,
				'entity_type' => 'node',
				'bundle' => 'ed_cluster',
				'display' => array(
						'default' => array(
								'label' => 'above',
								'type' => 'list_default',
								'module' => 'list',
						),
				),
				'widget' => array(
						'type' => 'options_select',
				),
		);
		field_create_instance($instance);
	}
}


/**
 * Creates and adds course_code field
 */
function ed_cluster_node_add_field_course_code() {
	$field_name = 'ed_field_course_code';
	if (!field_info_field($field_name)) {
		$field = array(
				'field_name' => $field_name,
				'type' => 'text',
				'entity_types' => array('node'),
				'cardinality' => 1,
				'locked' => FALSE,
		);
		field_create_field($field);
	}


	if (!field_info_instance('node', 'ed_field_course_code', 'ed_cluster')) {
		$instance = array(
				'field_name' => $field_name,
				'entity_type' => 'node',
				'bundle' => 'ed_cluster',
				'label' => t('Õppeaine kood'),
				'description' => '',
				'settings' => array(
						'text_processing' => false,
				),
				'widget' => array(
						'settings' => array(
								'rows' => 1,
						),
				),
				'required' => FALSE,
				'display' => array(
						'default' => array(
								'label' => 'hidden',
								'type' => 'text_default',
						),
						'featured' => array(
								'label' => 'hidden',
								'type' => 'text_default',
						),
				),
		);
		field_create_instance($instance);
	}

}

/**
 * Creates and adds course_aim field
 */
function ed_cluster_node_add_field_course_aim() {
	$field_name = 'ed_field_course_aim';
	if (!field_info_field($field_name)) {
		$field = array(
				'field_name' => $field_name,
				'type' => 'text_long',
				'entity_types' => array('node'),
				'cardinality' => 1,
				'locked' => FALSE,
		);
		field_create_field($field);
	}


	if (!field_info_instance('node', 'ed_field_course_aim', 'ed_cluster')) {
		$instance = array(
				'field_name' => $field_name,
				'entity_type' => 'node',
				'bundle' => 'ed_cluster',
				'label' => t('Aine eesmärk'),
				'description' => '',
				'settings' => array(
						'text_processing' => true,
				),
				'widget' => array(
						'settings' => array(
								'rows' => 5,
						),
				),
				'required' => FALSE,
				'display' => array(
						'default' => array(
								'label' => 'hidden',
								'type' => 'text_default',
						),
						'featured' => array(
								'label' => 'hidden',
								'type' => 'text_default',
						),
				),
		);
		field_create_instance($instance);
	}

}

/**
 * Creates and adds course_learning_outcomes field
 */
function ed_cluster_node_add_field_learning_outcomes() {
	$field_name = 'ed_field_learning_outcomes';
	if (!field_info_field($field_name)) {
		$field = array(
				'field_name' => $field_name,
				'type' => 'text_long',
				'entity_types' => array('node'),
				'cardinality' => 1,
				'locked' => FALSE,
		);
		field_create_field($field);
	}


	if (!field_info_instance('node', 'ed_field_learning_outcomes', 'ed_cluster')) {
		$instance = array(
				'field_name' => $field_name,
				'entity_type' => 'node',
				'bundle' => 'ed_cluster',
				'label' => t('Õpiväljundid'),
				'description' => '',
				'settings' => array(
						'text_processing' => true,
				),
				'widget' => array(
						'settings' => array(
								'rows' => 3,
						),
				),
				'required' => FALSE,
				'display' => array(
						'default' => array(
								'label' => 'hidden',
								'type' => 'text_default',
						),
						'featured' => array(
								'label' => 'hidden',
								'type' => 'text_default',
						),
				),
		);
		field_create_instance($instance);
	}

}

/**
 * Creates and adds assessment_method field
 */
function ed_cluster_node_add_field_assessment_method() {
	$field_name = 'ed_field_assessment_method';
	if (!field_info_field($field_name)) {
		$field = array(
				'field_name' => $field_name,
				'type' => 'text_long',
				'entity_types' => array('node'),
				'cardinality' => 1,
				'locked' => FALSE,
		);
		field_create_field($field);
	}


	if (!field_info_instance('node', 'ed_field_assessment_method', 'ed_cluster')) {
		$instance = array(
				'field_name' => $field_name,
				'entity_type' => 'node',
				'bundle' => 'ed_cluster',
				'label' => t('Hindamismeetod'),
				'description' => '',
				'settings' => array(
						'text_processing' => true,
				),
				'widget' => array(
						'settings' => array(
								'rows' => 4,
						),
				),
				'required' => FALSE,
				'display' => array(
						'default' => array(
								'label' => 'hidden',
								'type' => 'text_default',
						),
						'featured' => array(
								'label' => 'hidden',
								'type' => 'text_default',
						),
				),
		);
		field_create_instance($instance);
	}

}


/**
 * Creates and adds study_year field
 */
function ed_cluster_node_add_field_study_year() {

		if(!field_info_field('ed_field_study_year')){
		$field = array(
				'field_name' => 'ed_field_study_year',
				'label' => t('Õppeaasta'),
				'cardinality' => 1,
				'settings' => array(
						'input_format' => 'Y',
						'granularity' => array('year'),
				),
				'module' => 'date',
				'type' => 'date',
				'entity_types' => array(),


		);
		field_create_field($field);
	}

	if(!field_info_instance('node', 'ed_field_study_year', 'ed_cluster')){
		$instance = array(
				'field_name' => 'ed_field_study_year',
				'label' => '',
				'description' => '',
				'required' => false,
				'entity_type' => 'node',
				'bundle' => 'ed_cluster',

				'display' => array(
						'default' => array(
								'label' => 'above',
								'module' => 'date',
								'settings' => array(
										'format_type' => 'medium',
										'fromto' => 'both',
										'multiple_from' => '',
										'multiple_number' => '',
										'multiple_to' => '',
										'show_repeat_rule' => 'show',
								),
								'type' => 'date_default',
								'weight' => '1',
						),
						'teaser' => array(
								'label' => 'above',
								'settings' => array(),
								'type' => 'hidden',
								'weight' => 0,
						),
				),

				'widget' => array(
						'active' => 1,
						'type' => 'date_select',
						'weight' => 6,
						'module' => 'date',
						'settings' => array(
								'increment' => '1',
								'input_format' => 'Y',
								'input_format_custom' => '',
								'label_position' => 'above',
								'repeat_collapsed' => 0,
								'text_parts' => array(),
								'year_range' => '-2:+2',
						),
				),

				'settings' => array(
						'default_format' => 'short',
						'default_value' => 'now',
						'default_value2' => 'blank',
						'default_value_code' => '',
						'default_value_code2' => '',
						'user_register_form' => FALSE,
				),


		);
		field_create_instance($instance);
	}
}


/**
 * Adds ed_g_drive_file field instance
 */
function ed_cluster_node_add_field_g_drive_file() {
	$field_name = 'ed_g_drive_file';
	$field = field_info_field($field_name);
	if (!empty($field) && !field_info_instance('node', $field_name, 'ed_cluster')) {
		$instance = array(
				'field_name' => $field_name,
				'entity_type' => 'node',
				'bundle' => 'ed_cluster',
				'label' => t('Failid Google Drive-st'),
				'description' => '',
				'widget' => array(
						'settings' => array(
								'rows' => 1,
						),
				),
				'required' => FALSE,
				'display' => array(
						'default' => array(
								'label' => 'hidden',
						),
						'featured' => array(
								'label' => 'hidden',
						),
				)
		);
		field_create_instance($instance);
	}
}




/**
 * Deletes node type ed_cluster.
 */
function ed_cluster_delete_node() {
  if (in_array('ed_cluster', node_type_get_names())) {
    node_type_delete('ed_cluster');
    node_types_rebuild();
  }
}

/**
 * Deletes all ed_cluster nodes.
 */
function ed_cluster_delete_ed_cluster_nodes() {
  $nids = array();
  $query = db_select('node', 'n')
    ->fields('n', array('nid'))
    ->condition('n.type', 'ed_cluster');
  $nids = $query->execute()->fetchCol();
  if (!empty($nids)) {
    node_delete_multiple($nids);
  }
}

/**
 * Update ed_cluter group field display for teaser.
 */
function ed_cluster_update_7100(&$sandbox) {
  $og_field = field_info_instance('node', OG_GROUP_FIELD, 'ed_cluster');
  $og_field['display']['teaser']['label'] = 'hidden';
  $og_field['display']['teaser']['type'] = 'og_group_subscribe';
  $og_field['display']['teaser']['weight'] = 0;
  field_update_instance($og_field);
}

/**
 * Add private comment field
 */
function ed_cluster_update_7101(&$sandbox) {
  ed_cluster_add_field_private_comment();
}

/**
 * Add to_group_member field
 */
function ed_cluster_update_7102(&$sandbox) {
  ed_cluster_create_field_to_group_member();
}

/**
 * Add content field to ed_cluster
 */
function ed_cluster_update_7103(&$sandbox) {
  ed_cluster_node_add_field_content();
}

/**$form['ed_field_course_code']['#weight'] = 4;
 * Grant edit any page post permissions to group members
 */
function ed_cluster_update_7104(&$sandbox){
  $roles = og_roles('node', 'ed_cluster');
    foreach($roles as $key=>$value){
      if($value == 'member'){
        $rid = $key;
      }
    }
  og_role_grant_permissions($rid, $permissions = array('update any ed_page content'));
}

/**
 * Add ed_field_group_state field
 */
function ed_cluster_update_7105(&$sandbox){
  ed_cluster_node_add_field_group_state();

  // Get all nodes of 'ed_cluster' type, populate the field with a value of '1' - active group state.
  $groups = db_query("SELECT nid, vid FROM {node} WHERE type = 'ed_cluster'")->fetchAllAssoc('nid');
  foreach ($groups as $nid => $values) {
    $fields = array(
        'entity_type' => 'node',
        'bundle' => 'ed_cluster',
        'deleted' => 0,
        'entity_id' => $values->nid,
        'revision_id' => $values->vid,
        'language' => LANGUAGE_NONE,
        'delta' => 0,
        'ed_field_group_state_value' => 1,
    );
    db_insert('field_data_ed_field_group_state')
        ->fields($fields)
        ->execute();
    db_insert('field_revision_ed_field_group_state')
        ->fields($fields)
        ->execute();
  }
}


/**
 * Add ed_group_type field
 */
function ed_cluster_update_7106(&$sandbox){

	ed_cluster_create_field_group_type();
	ed_cluster_node_add_field_group_type();


	// Get all nodes of 'ed_cluster' type, populate the field with a value of '3' - third and default group type.
	$groups = db_query("SELECT nid, vid FROM {node} WHERE type = 'ed_cluster'")->fetchAllAssoc('nid');
	foreach ($groups as $nid => $values) {
		$fields = array(
				'entity_type' => 'node',
				'bundle' => 'ed_cluster',
				'deleted' => 0,
				'entity_id' => $values->nid,
				'revision_id' => $values->vid,
				'language' => LANGUAGE_NONE,
				'delta' => 0,
				'ed_field_group_type_value' => 3,
		);
		db_insert('field_data_ed_field_group_type')
				->fields($fields)
				->execute();
		db_insert('field_revision_ed_field_group_type')
				->fields($fields)
				->execute();
	}

}


/**
 * Add new fields used in different group types
 */
function ed_cluster_update_7107(&$sandbox){

	ed_cluster_node_add_field_curriculum();
	ed_cluster_node_add_field_university();
	ed_cluster_node_add_field_course_code();
	ed_cluster_node_add_field_course_aim();
	ed_cluster_node_add_field_learning_outcomes();
	ed_cluster_node_add_field_assessment_method();
	ed_cluster_node_add_field_study_year();

}


/**
 * Add ed_g_drive_file field instance
 */
function ed_cluster_update_7108(&$sandbox){


	ed_cluster_node_add_field_g_drive_file();

}

/**
 * Learning outcomes restructure
 */
function ed_cluster_update_7109(&$sandbox){

	//	create new content type 'learning_outcome'

	$type = array(
		'type' => 'ed_learning_outcome',
		'name' => t('Learning Outcome'),
		'base' => 'node_content',
		'custom' => FALSE,
		'modified' => FALSE,
		'locked' => TRUE,
		'has_title' => TRUE,
		'title_label' => t('Title'),
		'module' => 'ed_cluster',
	);
	$type = node_type_set_defaults($type);
	node_type_save($type);

	//	add field instances to learning_outcome

	field_create_instance([
		'field_name' => 'ed_field_category',
		'entity_type' => 'node',
		'bundle' => 'ed_learning_outcome',
		'label' => t('Standardized competence outcome'),
		'widget' => [
			'type' => 'term_reference_tree',
			'settings' => [ 'start_minimized' => TRUE ]
		]
	]);

	field_create_instance([
		'field_name' => 'ed_field_learning_outcomes',
		'entity_type' => 'node',
		'bundle' => 'ed_learning_outcome',
		'label' => t('Description')
	]);

	field_create_instance([
		'field_name' => 'ed_field_assessment_method',
		'entity_type' => 'node',
		'bundle' => 'ed_learning_outcome',
		'label' => t('Assessment description')
	]);

	//	add learning_outcome reference field to clusters

	field_create_field([
	    'field_name' => 'ed_field_learning_outcome_ref',
	    'type' => 'entityreference',
	    'cardinality' => FIELD_CARDINALITY_UNLIMITED,
	    'settings' => [
	      'target_type' => 'node',
	      'handler_settings' => ['target_bundles' => ['ed_learning_outcome']]
    	]
    ]);

    field_create_instance([
		'field_name' => 'ed_field_learning_outcome_ref',
		'entity_type' => 'node',
		'bundle' => 'ed_cluster',
		'label' => t('Learning Outcomes'),
		'widget' => [
			'settings' => [ 'rows' => 1 ]
		],
		'display' => [
			'default' => [ 'label' => 'hidden' ],
			'featured' => [ 'label' => 'hidden', ]
		]
	]);

	//  find existing clusters with learning outcome data defined

	$q = db_select("node", "n");
	$q->condition("n.type", "ed_cluster");
	$q->fields("n", ["nid", "uid"]);
	$q->leftJoin("field_data_ed_field_category", "fc", "fc.entity_id = n.nid");
	$q->addField("fc", "entity_id", "fc_entity_id");
	$q->leftJoin("field_data_ed_field_assessment_method", "fa", "fa.entity_id = n.nid");
	$q->addField("fa", "entity_id", "fa_entity_id");
	$q->leftJoin("field_data_ed_field_learning_outcomes", "fl", "fl.entity_id = n.nid");
	$q->addField("fl", "entity_id", "fl_entity_id");
	$nodes = $q->execute()->fetchAll(PDO::FETCH_ASSOC);
	unset($q);
	$nodes = ed_util_array_concentrate_member($nodes, "nid", "fc_entity_id");

	//  create new learning outcome nodes, reassign field data to new nodes and add learning outcome ref to cluster nodes

	foreach($nodes as &$node) {
	if (empty($node["fc_entity_id"]) && $node["fa_entity_id"] == NULL && $node["fl_entity_id"] == NULL) continue;

	$lo = new stdClass();
	$lo->title = "Õpiväljund 1";
	$lo->type = "ed_learning_outcome";
	$lo->language = LANGUAGE_NONE;
	$lo->uid = $node["uid"];
	$lo->status = 1;
	$lo->promote = 0;
	$lo->comment = 0;
	$lo = node_submit($lo);
	node_save($lo);

	if (!empty($node["fc_entity_id"])) {
		$q = db_update("field_data_ed_field_category");
		$q->condition("entity_id", $node["nid"], "=");
		$q->fields(["entity_id" => $lo->nid]);
		$q->execute();
		unset($q);
	}

	if ($node["fa_entity_id"] != NULL) {
		$q = db_update("field_data_ed_field_assessment_method");
		$q->condition("entity_id", $node["nid"], "=");
		$q->fields(["entity_id" => $lo->nid]);
		$q->execute();
		unset($q);
	}

	if ($node["fl_entity_id"] != NULL) {
		$q = db_update("field_data_ed_field_learning_outcomes");
		$q->condition("entity_id", $node["nid"], "=");
		$q->fields(["entity_id" => $lo->nid]);
		$q->execute();
		unset($q);
	}

	$q = db_insert("field_data_ed_field_learning_outcome_ref");
	$q->fields([
		"entity_type" => "node",
		"bundle" => "ed_learning_outcome",
		"deleted" => 0,
		"entity_id" => $node["nid"],
		"revision_id" => $node["nid"],
		"language" => LANGUAGE_NONE,
		"delta" => 0,
		"ed_field_learning_outcome_ref_target_id" => $lo->nid
	]);
	debug($node);
	debug($lo);
	debug($q->execute());

	}

	//  remove fields from cluster
	field_delete_instance(field_info_instance("node", "ed_field_category" , "ed_cluster"), FALSE);
	field_delete_instance(field_info_instance("node", "ed_field_assessment_method" , "ed_cluster"), FALSE);
	field_delete_instance(field_info_instance("node", "ed_field_learning_outcomes" , "ed_cluster"), FALSE);


}

/**
 * Setting ed_field_curriculum cardinality to unlimited
 */
function ed_cluster_update_7110(&$sandbox) {
  $field = field_info_field('ed_field_curriculum');
  $field['cardinality'] = FIELD_CARDINALITY_UNLIMITED;
  field_update_field($field);
}

/**
 * Changing ed_field_curriculum and ed_field_university to use callback functions,
 * it also temporarily removes protection from mdifying allowed_values of fields
 */
function ed_cluster_update_7111(&$sandbox) {
  define('ED_REMOVE_LIST_FIELD_UPDATE_FORBID', true);
  $curriculum = field_info_field('ed_field_curriculum');
  $curriculum['settings']['allowed_values_function'] = '_ed_cluster_curriculum_options_list';
  $curriculum['settings']['allowed_values'] = [];
  field_update_field($curriculum);

  $university = field_info_field('ed_field_university');
  $university['settings']['allowed_values_function'] = '_ed_cluster_universities_options_list';
  $university['settings']['allowed_values'] = [];
  field_update_field($university);
  define('ED_REMOVE_LIST_FIELD_UPDATE_FORBID', false);
}


/**
 * Setting ed_field_course_aim field to plain text
 */
function ed_cluster_update_7112(&$sandbox) {

  $instance_info = field_info_instance('node', 'ed_field_course_aim', 'ed_cluster');
  $instance_info['settings'] = array(
      'text_processing' => false,
  );

  field_update_instance($instance_info);
}
