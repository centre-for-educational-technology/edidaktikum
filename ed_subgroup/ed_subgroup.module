<?php


/**
 * Implements hook_node_info().
 */

function ed_subgroup_node_info(){
  $items['ed_subgroup'] = array(
    'name' => t('Subgroup'),
    'type' => 'ed_subgroup',
    'base' => 'node_content',
    'description' => t('description'),
    'has_title' => '1',
    'title_label' => t('Title'),
    'body_label' => t('body_label'),
  );
  return $items;
}


function ed_subgroup_resource_form($node, $form_state){
  return node_content_form($node, $form_state);
}


/**
 * Implements hook_ctools_plugin_api().
 */
function ed_subgroup_ctools_plugin_api() {
  list($module, $api) = func_get_args();
  if ($module == "page_manager" && $api == "pages_default") {
    return array("version" => "1");
  }
}

//XXX This overrides ed_cluster_menu
//function ed_subgroup_menu(){
//  $items['node/%node/news'] = array(
//    'title' => t('News'),
//    'page callback' => 'ed_listing_from_group',
//    'access callback' => 'ed_subgroup_content_listing_access',
//    'page arguments' => array('node', 1, 'ed_news'),
//    'access arguments' => array('node', 1, 'ed_news'),
//    'type' => MENU_LOCAL_TASK,
//    'weight' => 50,
//  );
//  $items['node/%node/task-manager'] = array(
//    'title' => t('Task Manager'),
//    'page callback' => 'ed_task_manager',
//    'access callback' => 'ed_task_manager_access',
//    'page arguments' => array('node', 1),
//    'access arguments' => array('node', 1),
//    'type' => MENU_LOCAL_TASK,
//    'weight' => 50,
//  );
//  $items['node/%node/event'] = array(
//    'title' => t('Events'),
//    'page callback' => 'ed_listing_from_group',
//    'access callback' => 'ed_subgroup_content_listing_access',
//    'page arguments' => array('node', 1, 'ed_event'),
//    'access arguments' => array('node', 1, 'ed_event'),
//    'type' => MENU_LOCAL_TASK,
//    'weight' => 50,
//  );
//  $items['node/%node/blog'] = array(
//    'title' => t('Posts'),
//    'page callback' => 'ed_listing_from_group',
//    'access callback' => 'ed_subgroup_content_listing_access',
//    'page arguments' => array('node', 1, 'ed_blog'),
//    'access arguments' => array('node', 1, 'ed_blog'),
//    'type' => MENU_LOCAL_TASK,
//    'weight' => 50,
//  );
//  $items['node/%node/learning-resource'] = array(
//    'title' => t('Learning Resources'),
//    'page callback' => 'ed_listing_from_group',
//    'access callback' => 'ed_subgroup_content_listing_access',
//    'page arguments' => array('node', 1, 'ed_learning_resource'),
//    'access arguments' => array('node', 1, 'ed_learning_resource'),
//    'type' => MENU_LOCAL_TASK,
//    'weight' => 50,
//  );
//  $items['node/%node/forum'] = array(
//    'title' => t('Discussion Board'),
//    'page callback' => 'ed_listing_from_group',
//    'access callback' => 'ed_subgroup_content_listing_access',
//    'page arguments' => array('node', 1, 'ed_forum'),
//    'access arguments' => array('node', 1, 'ed_forum'),
//    'type' => MENU_LOCAL_TASK,
//    'weight' => 50,
//  );
//
//  $items['node/%node/bookmark'] = array(
//    'title' => t('Bookmarks'),
//    'page callback' => 'ed_listing_from_group',
//    'access callback' => 'ed_subgroup_content_listing_access',
//    'page arguments' => array('node', 1, 'ed_bookmark'),
//    'access arguments' => array('node', 1, 'ed_bookmark'),
//    'type' => MENU_LOCAL_TASK,
//    'weight' => 50,
//  );
//  $items['node/%node/file'] = array(
//    'title' => t('Files'),
//    'page callback' => 'ed_listing_from_group',
//    'access callback' => 'ed_subgroup_content_listing_access',
//    'page arguments' => array('node', 1, 'ed_file'),
//    'access arguments' => array('node', 1, 'ed_file'),
//    'type' => MENU_LOCAL_TASK,
//    'weight' => 50,
//  );
//
//  return $items;
//}

function ed_subgroup_content_listing_access($filler, $gnode, $type){
  $is_group = _ed_is_nid_subgroup($gnode->nid);  
  return $is_group;
}

function _ed_is_nid_subgroup($nid){
  $query = db_select('node', 'n')
    ->fields('n', array('nid'))
    ->condition('n.type', array('ed_subgroup', 'ed_cluster'), 'IN')
    ->condition('n.nid', $nid);
  $nids = $query->execute()->fetchCol();
  if(!empty($nids)){
    return true;
  }
  return false;
}


function ed_subgroup_node_insert($node){
  if($node->type == 'ed_subgroup'){    
    $subgroupnode = node_load($node->nid);
    
    $parentgroupnode = node_load($subgroupnode->og_group_ref[LANGUAGE_NONE][0]['target_id']);
    $parentgroupadmins = _ed_cluster_get_group_admins($parentgroupnode, true);
    
    foreach($parentgroupadmins as $parentgroupadmin){
      
      $values = array(
        'entity_type' => 'user',
        'entity' => $parentgroupadmin,
        'field_name' => FALSE,
        'state' => OG_STATE_ACTIVE,
      );
      og_group('node', $subgroupnode->nid, $values);
    }
  }
}


function ed_subgroup_node_view($node, $view_mode, $langcode){
  switch ($node->type){
    case 'ed_subgroup':      
      if($view_mode=='full'){
        //menu_tree_set_path('main-menu', 'clusters');
        $content_nids = _ed_get_group_content($node->nid);      
        $content = node_load_multiple($content_nids);        
        $types = array();
        foreach($content as $content_single){        
          $types[] = $content_single->type;
        }
        
        if (in_array('ed_task', $types)) {
          array_unshift($types, 'ed_task');
        }
        $types_unique = array_unique($types);
        $options = array(
          'attributes' => array(),
          'query' => array(
            'og_group_ref' => $node->nid,
            'destination' => 'node/'.$node->nid,
          ),
        );

        // Check if current user is a member of the group
        $is_group_member = og_is_member('node', $node->nid);

        foreach($types_unique as $type){
          $show_link = true;
          if($type!='ed_answer'){
            if($type=='ed_task'){
              if (!ed_task_manager_access('node', $node)) {
                $show_link = false;
              }
            }          
            
            $type_nodes_count = _ed_get_group_content_by_type_count($node->nid, $type);
            
            $headingmarkup =  _ed_cluster_plural_title_for_group_node_type($type) . ' ('.t('Total') . ': ' . $type_nodes_count . ')';
            if ($show_link) {
              $headingmarkup = l($headingmarkup, _ed_cluster_destination_for_group_node_type($node, $type));
            }
            
            $node->content['ed_subgroup_content'][$type]['heading'] = array(
              '#type' => 'markup',
              '#prefix' => '<h2 class="' . $type. '">',
              '#markup' => $headingmarkup,
              '#suffix' => '</h2>',
            );
            // Add new link is only shown to group members
            //if ($is_group_member) {
            //  $node->content['ed_cluster_content'][$type]['heading']['#markup'] .= '<em class="ed-og-add-new">'.l(t('Add new'), 'node/add/'.str_replace('_', '-',$type), $options).'</em>';
            //}
            $last_nodes = _ed_get_last_content_by_type($type, $content);
            foreach($last_nodes as $last_node_single){
                $tere = node_view($last_node_single, 'teaser');
                $node->content['ed_subgroup_content'][$type][$last_node_single->nid] = $tere;
            }
          }
        }
      }
      
  }
}


function ed_subgroup_field_extra_fields(){
  $extra['node']['ed_subgroup']['display'] = array(
    'ed_subgroup_content' => array(
      'label' => t('Group content paged'),
      'description' => t('desc'),
      'weight' => 10,
    ),
  );
  return $extra;   
}
