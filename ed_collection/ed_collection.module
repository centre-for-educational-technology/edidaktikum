<?php

/**
 * @file
 * eDidaktikum collection module.
 */

/**
 * Implements hook_node_view()
 */
function ed_collection_node_view($node, $view_mode, $langcode){
  if($view_mode == 'teaser' && $node->type == 'ed_collection'){
    // TODO Use some default image if not provided
    if(!empty($node->ed_field_featured_image)){
      $imgpath = image_style_url('thumbnail', $node->ed_field_featured_image[LANGUAGE_NONE][0]['uri']);
      
      $node->content['cover-image'] = array(
        '#type' => 'markup',
        '#weight' => 5,
        '#markup' => '<img src="'.$imgpath.'"/>',
        '#prefix' => '<div class="cover-image">',
        '#suffix' => '</div>',
      );

    }

    $author = user_load($node->uid);
    $items_field = $node->ed_collection_field_items[LANGUAGE_NONE];
    $items_count = is_array($items_field) ? count($items_field) : 0;
    $views_count = ed_get_views($node->nid);
    $likes_count = ed_get_likes($node->nid);
    $username = edidaktikum_get_full_name_for_user_account($author);
    
    $parts = array(
      '<span class="single-creator">' . l($username, 'user/'.$node->uid) . '</span>',
      '<span class="single-icon-holder"><i class="fa fa-file-text-o"> ' . $items_count . '</i></span>',
      '<span clss="single-icon-holder"><i class="fa fa-eye"> ' . $views_count . '</i></span>',
      '<span class="single-icon-holder"><i class="fa fa-heart"> ' . $likes_count . '</i></span>',
    );
    
    if ( 1 === (int)$node->status ) {
        array_push($parts, '<span class="label label-info single-publishing-status">' . t('Published') . '</span>');
    }

    $node->content['metadata'] = array(
      '#type' => 'markup',
      '#weight' => 50,
      '#markup' => implode(' ', $parts),
      '#prefix' => '<div class="description">',
      '#suffix' => '</div>',
    );
  }
}

/**
 * Implements hook_menu().
 */
function ed_collection_menu() {
  $items['collections'] = array(
    'title' => t('Collections'),
    'page callback' => 'ed_collection_listing_page',
    'access callback' => TRUE,
    'weight' => 10,
    'menu_name' => 'main-menu',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['dashboard/collection'] = array(
    'title' => t('Collection'),
    'page callback' => 'ed_collection_dashboard_listing_page',
    'access callback' => 'ed_collection_teacher_or_admin_is_logged_in',
    'weight' => 35,
    'menu_name' => 'ed-dashboard-menu',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Collections liting page.
 */
function ed_collection_listing_page(){
  $content = array();

  if ( ed_collection_teacher_or_admin_is_logged_in() ) {
    $content['add-new-container'] = array(
      '#type' => 'container',
      '#attributes' => array(
        'class' => array('ed-add-new-node', 'ed-add-new-ed-collection'),
      ),
    );
    $content['add-new-container']['add-new-collection'] = array(
      '#type' => 'link',
      '#title' => t('Add new collection'),
      '#href' => 'node/add/ed-collection',
    );
  }
  
  $nids = ed_collection_get_published_collections();
  if(!empty($nids)){
    $nodes = node_load_multiple($nids);    
    $build = node_view_multiple($nodes);
    $build['pager'] = array(
      '#theme' => 'pager',
      '#weight' => 5,
    );
    $content['pager']['collections'] = $build;
  }
  
  return $content;
}


/**
 * Collections dashboard listing page.
 */

function ed_collection_dashboard_listing_page(){
  menu_tree_set_path('main-menu', 'dashboard');
  $content = array();

  $content['add-new-container'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array('ed-add-new-node', 'ed-add-new-ed-collection'),
    ),
  );
  $content['add-new-container']['add-new-collection'] = array(
    '#type' => 'link',
    '#title' => t('Add new collection'),
    '#href' => 'node/add/ed-collection',
  );
  
  $nids = ed_collection_get_user_collections();
  if(!empty($nids)){
    $nodes = node_load_multiple($nids);    
    $build = node_view_multiple($nodes);
    $build['pager'] = array(
      '#theme' => 'pager',
      '#weight' => 5,
    );
    $content['pager']['collections'] = $build;
  }
  
  return $content;
}

/**
 * User collections ids.
 * Support pagination
 */
function ed_collection_get_user_collections() {
  global $user;
  $query = db_select('node', 'n')
    ->extend('PagerDefault')
    ->fields('n', array('nid'))
    ->condition('n.type', 'ed_collection')
    ->condition('n.uid', $user->uid)
    ->addTag('node_access')
    ->range()
    ->orderBy('n.created', 'DESC')
    ->limit(ed_get_paging_nr());

  $nids = $query->execute()->fetchCol();
  return $nids;
}

/**
 * Published collections ids.
 * Support pagination
 */
function ed_collection_get_published_collections() {
  $query = db_select('node', 'n')
    ->extend('PagerDefault')
    ->fields('n', array('nid'))
    ->condition('n.type', 'ed_collection')
    ->condition('n.status', 1)
    ->addTag('node_access')
    ->range()
    ->orderBy('n.created', 'DESC')
    ->limit(ed_get_paging_nr());

  $nids = $query->execute()->fetchCol();
  return $nids;
}

/*function ed_collection_theme($existing, $type, $theme, $path) {
  return array(
    'ed_collection_page' => array(
      'variables' => array('node_view' => '', 'site_name' => variable_get('site_name', 'Drupal'), 'front_page' => variable_get('site_frontpage')),
      'template' => 'ed_collection_page',
      'path' => drupal_get_path('module', 'ed_collection'),
      'render element' => 'element',
    ),
    'node__ed_collection__kala' => array(
      'template' => 'node--ed_collection--kala',
      'variables' => array('node' => (object)array()),
      'theme path' => drupal_get_path('module', 'ed_collection')
    )
  );  
}*/

/*function ed_collection_ctools_render_alter(&$info, &$page, &$context){  
  if(isset($context['contexts']['argument_entity_id:node_1']) && $context['contexts']['argument_entity_id:node_1']->data->type == 'ed_collection'){
    if(!empty($context['contexts']['argument_entity_id:node_1']->data->ed_field_cover_image)){      
      $imguri = $context['contexts']['argument_entity_id:node_1']->data->ed_field_cover_image[LANGUAGE_NONE][0]['uri'];
      $imgurl = file_create_url($imguri);    
      drupal_add_css('.node-type-ed-collection {background: white url('.$imgurl.') no-repeat;}',$option['type'] = 'inline');
    }else{
      $themepath = drupal_get_path('theme',$GLOBALS['theme']);    
      $defaultimagepath = $themepath.'/images/portfolio_bg.jpg';// XXX Probably need a new image
      $defimageurl = file_create_url($defaultimagepath);
      drupal_add_css('.node-type-ed-collection {background: white url('.$defimageurl.') no-repeat;}',$option['type'] = 'inline');  
    }
  }
}*/

/**
 * Implements hook_ctools_plugin_api().
 */
function ed_collection_ctools_plugin_api() {
  list($module, $api) = func_get_args();
  if ($module == "page_manager" && $api == "pages_default") {
    return array("version" => "1");
  }
}

/**
 * Implements hook_views_api().
 */
function ed_collection_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'ed_collection') . '/includes/views',
  );
}

/**
 * Implements hook_form_alter().
 */
function ed_collection_form_alter(&$form, &$form_state, $form_id) {
  if ('ed_collection_node_form' == $form_id) {
    if (empty($form['#node']->nid)) {
      drupal_set_title(t('Create Collection'));
    }
  }
}

/**
 * Checks if logged in user is teacher or admin.
 */
function ed_collection_teacher_or_admin_is_logged_in() {
  if (!user_is_logged_in()) {
    return false;
  }

  $account = $GLOBALS['user'];
  if (in_array('teacher', $account->roles) || in_array('administrator', $account->roles)) {
    return true;
  }

  return false;
}

