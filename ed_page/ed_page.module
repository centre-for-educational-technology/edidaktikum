<?php

require_once('ed_page_functions.inc');

/*
 * Implements hook_info().
 */

function ed_page_node_info() {
  $items['ed_page'] = array(
    'name' => t('Page'),
    'type' => 'ed_page',
    'base' => 'node_content',
    'description' => t('description'),
    'has_title' => '1',
    'title_label' => t('Title'),
    'body_label' => t('body_label'),
  );
  return $items;
}

/*
 * Implements hook_form().
 */
function ed_page_form($node, $form_state) {
  return node_content_form($node, $form_state);
}

/**
 * Implements hook_form_alter().
 */
function ed_page_form_alter(&$form, &$form_state, $form_id) {
  if ('ed_page_node_form' == $form_id) {
    if (empty($form['#node']->nid)) {
      drupal_set_title(t('Create Page'));
    }
  }
}

/**
 * Implements hook_ctools_plugin_api().
 */
function ed_page_ctools_plugin_api() {
  list($module, $api) = func_get_args();
  if ($module == "page_manager" && $api == "pages_default") {
    return array("version" => 1);
  }
}


/**
 * Implements hook_node_view().
 */

function ed_page_node_view($node, $view_mode, $langcode){
  switch($node->type){
    case 'ed_page':
      $data = _ed_page_get_revision_uid_and_timestamp($node->nid);
      $user = user_load($data['uid']);
      $username = $user->ed_field_full_name[LANGUAGE_NONE][0]['safe_value'];
      $datets = $data['timestamp'];      
      if($view_mode == 'full'){        
        $node->content['ed_page_revision'] = array(
          '#type' => 'item',
          '#label_display' => 'above',
          '#markup' => format_date($datets, 'long').' '.t('By').' '.l($username, 'user/'.$data['uid']),
        );
      }
    break;
  }
}

/**
 * Implements hook_field_extra_fields().
 */
function ed_page_field_extra_fields(){
  $extra['node']['ed_page']['display'] = array(
    'ed_page_revision' => array(
      'label' => t('Node Type Page Revision container'),
      'description' => t('Add ed_page revision info to panels'),
      'weight' => 10,
    ),
  );
  return $extra;
}

function _ed_page_get_revision_uid_and_timestamp($nid){
  $query = db_select('node_revision', 'nr')
      ->condition('nr.nid', $nid)
      ->fields('nr', array('uid', 'timestamp'));
  $result = $query->execute()->fetchAssoc();
  return $result;
  
  
}

